// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: genesis/v1/types.proto

package genesis

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GPUKind describes the available (NVIDIA) GPU types.
type GPUKind int32

const (
	GPUKind_GPU_KIND_UNSPECIFIED     GPUKind = 0
	GPUKind_GPU_KIND_TESLA_K80       GPUKind = 1 // Launched 11/2014
	GPUKind_GPU_KIND_TESLA_M60       GPUKind = 2 // Launched 08/2015
	GPUKind_GPU_KIND_TESLA_P100      GPUKind = 3 // Launched 06/2016
	GPUKind_GPU_KIND_TESLA_P4        GPUKind = 4 // Launched 09/2016
	GPUKind_GPU_KIND_TESLA_V100      GPUKind = 5 // Launched 06/2017
	GPUKind_GPU_KIND_TESLA_T4        GPUKind = 6 // Launched 11/2018
	GPUKind_GPU_KIND_TESLA_A100      GPUKind = 7 // Launched 05/2020
	GPUKind_GPU_KIND_TESLA_A10       GPUKind = 8 // Launched 04/2021
	GPUKind_GPU_KIND_TESLA_A100_80GB GPUKind = 9 // Launched 05/2020 -> 80 GB instead of 40 GB memory
)

// Enum value maps for GPUKind.
var (
	GPUKind_name = map[int32]string{
		0: "GPU_KIND_UNSPECIFIED",
		1: "GPU_KIND_TESLA_K80",
		2: "GPU_KIND_TESLA_M60",
		3: "GPU_KIND_TESLA_P100",
		4: "GPU_KIND_TESLA_P4",
		5: "GPU_KIND_TESLA_V100",
		6: "GPU_KIND_TESLA_T4",
		7: "GPU_KIND_TESLA_A100",
		8: "GPU_KIND_TESLA_A10",
		9: "GPU_KIND_TESLA_A100_80GB",
	}
	GPUKind_value = map[string]int32{
		"GPU_KIND_UNSPECIFIED":     0,
		"GPU_KIND_TESLA_K80":       1,
		"GPU_KIND_TESLA_M60":       2,
		"GPU_KIND_TESLA_P100":      3,
		"GPU_KIND_TESLA_P4":        4,
		"GPU_KIND_TESLA_V100":      5,
		"GPU_KIND_TESLA_T4":        6,
		"GPU_KIND_TESLA_A100":      7,
		"GPU_KIND_TESLA_A10":       8,
		"GPU_KIND_TESLA_A100_80GB": 9,
	}
)

func (x GPUKind) Enum() *GPUKind {
	p := new(GPUKind)
	*p = x
	return p
}

func (x GPUKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUKind) Descriptor() protoreflect.EnumDescriptor {
	return file_genesis_v1_types_proto_enumTypes[0].Descriptor()
}

func (GPUKind) Type() protoreflect.EnumType {
	return &file_genesis_v1_types_proto_enumTypes[0]
}

func (x GPUKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUKind.Descriptor instead.
func (GPUKind) EnumDescriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{0}
}

// Provider describes the available providers to launch instances.
type Provider int32

const (
	Provider_PROVIDER_UNSPECIFIED           Provider = 0
	Provider_PROVIDER_AMAZON_WEB_SERVICES   Provider = 1
	Provider_PROVIDER_GOOGLE_CLOUD_PLATFORM Provider = 2
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "PROVIDER_UNSPECIFIED",
		1: "PROVIDER_AMAZON_WEB_SERVICES",
		2: "PROVIDER_GOOGLE_CLOUD_PLATFORM",
	}
	Provider_value = map[string]int32{
		"PROVIDER_UNSPECIFIED":           0,
		"PROVIDER_AMAZON_WEB_SERVICES":   1,
		"PROVIDER_GOOGLE_CLOUD_PLATFORM": 2,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_genesis_v1_types_proto_enumTypes[1].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_genesis_v1_types_proto_enumTypes[1]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{1}
}

// Instance encapsulates the data required to refer to a specific VM.
type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier of the VM.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genesis_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_genesis_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// InstanceConfig describes core metadata about an instance, including its topology.
type InstanceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The provider that launches the instance.
	CloudProvider Provider `protobuf:"varint,1,opt,name=cloud_provider,json=cloudProvider,proto3,enum=genesis.v1.Provider" json:"cloud_provider,omitempty"`
	// The name of the zone where the instance is launched.
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// Whether the instance is a spot instance and can be terminated by the cloud provider.
	IsSpot bool `protobuf:"varint,3,opt,name=is_spot,json=isSpot,proto3" json:"is_spot,omitempty"`
}

func (x *InstanceConfig) Reset() {
	*x = InstanceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genesis_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceConfig) ProtoMessage() {}

func (x *InstanceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_genesis_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceConfig.ProtoReflect.Descriptor instead.
func (*InstanceConfig) Descriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *InstanceConfig) GetCloudProvider() Provider {
	if x != nil {
		return x.CloudProvider
	}
	return Provider_PROVIDER_UNSPECIFIED
}

func (x *InstanceConfig) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *InstanceConfig) GetIsSpot() bool {
	if x != nil {
		return x.IsSpot
	}
	return false
}

// InstanceResources describes the configuration of an instance provisioned by a cloud provider.
type InstanceResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of CPUs available on the instance.
	CpuCount uint32 `protobuf:"varint,1,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	// The amount of memory available on the instance in megabytes.
	Memory uint32 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	// The GPU configuration for the instance.
	Gpu *GPUResources `protobuf:"bytes,3,opt,name=gpu,proto3" json:"gpu,omitempty"`
}

func (x *InstanceResources) Reset() {
	*x = InstanceResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genesis_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceResources) ProtoMessage() {}

func (x *InstanceResources) ProtoReflect() protoreflect.Message {
	mi := &file_genesis_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceResources.ProtoReflect.Descriptor instead.
func (*InstanceResources) Descriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *InstanceResources) GetCpuCount() uint32 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *InstanceResources) GetMemory() uint32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *InstanceResources) GetGpu() *GPUResources {
	if x != nil {
		return x.Gpu
	}
	return nil
}

// GPUConfig describes the configuration of a set of GPUs to be attached to a VM.
type GPUResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The kind of GPU to be used.
	Kind GPUKind `protobuf:"varint,1,opt,name=kind,proto3,enum=genesis.v1.GPUKind" json:"kind,omitempty"`
	// The number of GPUs to be used.
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GPUResources) Reset() {
	*x = GPUResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genesis_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUResources) ProtoMessage() {}

func (x *GPUResources) ProtoReflect() protoreflect.Message {
	mi := &file_genesis_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUResources.ProtoReflect.Descriptor instead.
func (*GPUResources) Descriptor() ([]byte, []int) {
	return file_genesis_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *GPUResources) GetKind() GPUKind {
	if x != nil {
		return x.Kind
	}
	return GPUKind_GPU_KIND_UNSPECIFIED
}

func (x *GPUResources) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_genesis_v1_types_proto protoreflect.FileDescriptor

var file_genesis_v1_types_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a,
	0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00,
	0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x53, 0x70, 0x6f, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x28, 0x80, 0x08, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x50,
	0x55, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x03, 0x67, 0x70, 0x75, 0x22,
	0x62, 0x0a, 0x0c, 0x47, 0x50, 0x55, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x4b, 0x69,
	0x6e, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2a, 0x82, 0x02, 0x0a, 0x07, 0x47, 0x50, 0x55, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x50, 0x55,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x4b, 0x38, 0x30, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x50, 0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45,
	0x53, 0x4c, 0x41, 0x5f, 0x4d, 0x36, 0x30, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x50, 0x31, 0x30, 0x30,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x50, 0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54,
	0x45, 0x53, 0x4c, 0x41, 0x5f, 0x50, 0x34, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x56, 0x31, 0x30, 0x30,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x50, 0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54,
	0x45, 0x53, 0x4c, 0x41, 0x5f, 0x54, 0x34, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x41, 0x31, 0x30, 0x30,
	0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x50, 0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54,
	0x45, 0x53, 0x4c, 0x41, 0x5f, 0x41, 0x31, 0x30, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50,
	0x55, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x41, 0x31, 0x30,
	0x30, 0x5f, 0x38, 0x30, 0x47, 0x42, 0x10, 0x09, 0x2a, 0x6a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20,
	0x0a, 0x1c, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x4d, 0x41, 0x5a, 0x4f,
	0x4e, 0x5f, 0x57, 0x45, 0x42, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x53, 0x10, 0x01,
	0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x4f, 0x4f,
	0x47, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f,
	0x52, 0x4d, 0x10, 0x02, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_genesis_v1_types_proto_rawDescOnce sync.Once
	file_genesis_v1_types_proto_rawDescData = file_genesis_v1_types_proto_rawDesc
)

func file_genesis_v1_types_proto_rawDescGZIP() []byte {
	file_genesis_v1_types_proto_rawDescOnce.Do(func() {
		file_genesis_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_genesis_v1_types_proto_rawDescData)
	})
	return file_genesis_v1_types_proto_rawDescData
}

var file_genesis_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_genesis_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_genesis_v1_types_proto_goTypes = []interface{}{
	(GPUKind)(0),              // 0: genesis.v1.GPUKind
	(Provider)(0),             // 1: genesis.v1.Provider
	(*Instance)(nil),          // 2: genesis.v1.Instance
	(*InstanceConfig)(nil),    // 3: genesis.v1.InstanceConfig
	(*InstanceResources)(nil), // 4: genesis.v1.InstanceResources
	(*GPUResources)(nil),      // 5: genesis.v1.GPUResources
}
var file_genesis_v1_types_proto_depIdxs = []int32{
	1, // 0: genesis.v1.InstanceConfig.cloud_provider:type_name -> genesis.v1.Provider
	5, // 1: genesis.v1.InstanceResources.gpu:type_name -> genesis.v1.GPUResources
	0, // 2: genesis.v1.GPUResources.kind:type_name -> genesis.v1.GPUKind
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_genesis_v1_types_proto_init() }
func file_genesis_v1_types_proto_init() {
	if File_genesis_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_genesis_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genesis_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genesis_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genesis_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPUResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genesis_v1_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_genesis_v1_types_proto_goTypes,
		DependencyIndexes: file_genesis_v1_types_proto_depIdxs,
		EnumInfos:         file_genesis_v1_types_proto_enumTypes,
		MessageInfos:      file_genesis_v1_types_proto_msgTypes,
	}.Build()
	File_genesis_v1_types_proto = out.File
	file_genesis_v1_types_proto_rawDesc = nil
	file_genesis_v1_types_proto_goTypes = nil
	file_genesis_v1_types_proto_depIdxs = nil
}
