version: "3"
dotenv: [.env]
includes:
  dev:
    taskfile: ./Taskfile_{{OS}}.yml
    optional: true
  genesis:
    taskfile: ./services/genesis/
    dir: ./services/genesis

tasks:
  default:
    cmds:
      - task -l
    silent: true

  dev:install-tools:
    desc: Install platform-agnostic tools for interactive development.
    cmds:
      - go install -mod=readonly $(go list -f "{{`{{range .Imports}}{{.}} {{end}}`}}" dev/tools.go)
    sources:
      - go.mod

  dev:lint:
    desc: Lint all files in this project with the pre-commit configuration.
    deps:
      - dev:install-system-tools
    cmds:
      - pre-commit run -a

  # ------------------------------------------- DOCKER ------------------------------------------ #

  docker:run-services:
    interactive: true
    ignore_error: true
    desc: Run external services for testing via Docker.
    cmds:
      - docker compose --project-name taskfleet --file dev/docker-compose.yml up

  # -------------------------------------------- gRPC ------------------------------------------- #

  grpc:install-tools:
    desc: Install tools required for generating Protobuf code.
    cmds:
      - go install -mod=readonly $(go list -f "{{`{{range .Imports}}{{.}} {{end}}`}}" grpc/dev/tools.go)
    sources:
      - go.mod

  grpc:generate:
    desc: Generate gRPC/Protobuf library from API and schema definitions.
    deps:
      - grpc:install-tools
    cmds:
      - rm -rf grpc/gen
      - buf generate grpc/schema --template grpc/schema/buf.gen.yaml
    sources:
      - go.mod
      - grpc/schema/**

  # ------------------------------------------ DATABASE ----------------------------------------- #

  db:generate:
    desc: Generate Go code for database queries.
    deps:
      - grpc:install-tools
    cmds:
      - sqlc -f services/genesis/db/sqlc.yaml generate
    sources:
      - go.mod
      - "**/sqlc.yaml"
      - "**/*.sql"

  # ------------------------------------------- TESTS ------------------------------------------- #

  tests:generate-mocks:
    desc: Generate mocks for testing Go services.
    deps:
      - dev:install-tools
    cmds:
      - source dev/scripts/generate_mocks.sh
    sources:
      - go.mod
      - "**/.mockdef.yml"
